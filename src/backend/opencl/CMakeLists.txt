CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12)
PROJECT(mds)

MESSAGE(STATUS "Configuring OpenCL")
ADD_DEFINITIONS(-DHAVE_OPENCL)

FIND_PACKAGE(OpenCL REQUIRED)

OPTION(USE_SYSTEM_BOOST_HEADERS "Use system boost headers" OFF)
IF(USE_SYSTEM_BOOST_HEADERS)
  FIND_PACKAGE(Boost REQUIRED)
ELSE()
  INCLUDE("${CMAKE_MODULE_PATH}/build_boost_headers.cmake")
ENDIF()
INCLUDE_DIRECTORIES(${BoostHeaders_INCLUDE_DIRS})
MESSAGE(STATUS "boost headers directory: ${BoostHeaders_INCLUDE_DIRS}")

OPTION(USE_SYSTEM_BOOST_COMPUTE "Use system boost::compute" OFF)
IF(USE_SYSTEM_BOOST_COMPUTE)
  FIND_PACKAGE(BoostCompute REQUIRED)
ELSE()
  INCLUDE("${CMAKE_MODULE_PATH}/build_boost_compute.cmake")
ENDIF()
INCLUDE_DIRECTORIES(${BoostCompute_INCLUDE_DIRS})
MESSAGE(STATUS "boost::commpute directory: ${BoostCompute_INCLUDE_DIRS}")

ADD_DEFINITIONS(-DUSE_BOOST_COMPUTE)

OPTION(USE_SYSTEM_VEXCL "Use system VexCL" OFF)
IF(USE_SYSTEM_VEXCL)
  FIND_PACKAGE(VexCL REQUIRED)
ELSE()
  INCLUDE("${CMAKE_MODULE_PATH}/build_VexCL.cmake")
ENDIF()
INCLUDE_DIRECTORIES(${VexCL_INCLUDE_DIRS})
MESSAGE(STATUS "VecXL directory: ${VexCL_INCLUDE_DIRS}")

INCLUDE_DIRECTORIES(. ${CMAKE_SOURCE_DIR}/src)
include_directories(${xsimd_INCLUDE_DIRS})

SET(OPENCL_SOURCE_FILES
	instantiate.cpp
	OpenCLMultiDimensionalScaling.hpp
	OpenCLMemoryManagement.hpp
	Reducer.hpp
	)
ADD_LIBRARY(mds2_opencl ${OPENCL_SOURCE_FILES})
set_target_properties(mds2_opencl PROPERTIES COMPILE_FLAGS "${SIMD_FLAGS}")
TARGET_LINK_LIBRARIES(mds2_opencl ${OpenCL_LIBRARIES})

#ADD_EXECUTABLE(test test.cpp)
#MESSAGE(STATUS "OCL lib: ${OpenCL_LIBRARIES}")
